x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "50m"
    max-file: "4"

services:
  proxy:
    image: nginx:1-alpine
    ports:
      # only ports facing any connection from outside
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # setup your certbot and letsencrypt config
      - ../certbot/letsencrypt:/etc/letsencrypt
    restart: always
    depends_on:
      lemmy:
        condition: service_started
      lemmy-ui:
        condition: service_healthy
      postgres:
        condition: service_healthy
    logging: *default-logging

  lemmy:
    image: dessalines/lemmy:0.19.9
    hostname: lemmy
    restart: always
    environment:
      - RUST_LOG="warn,lemmy_server=info,lemmy_api=info,lemmy_api_common=info,lemmy_api_crud=info,lemmy_apub=info,lemmy_db_schema=info,lemmy_db_views=info,lemmy_db_views_actor=info,lemmy_db_views_moderator=info,lemmy_routes=info,lemmy_utils=info,lemmy_websocket=info"
    env_file:
      - .env
    volumes:
      - ./lemmy.hjson:/config/config.hjson:Z
    depends_on:
      postgres:
        condition: service_healthy
      pictrs:
        condition: service_started
    logging: *default-logging

  lemmy-ui:
    image: dessalines/lemmy-ui:0.19.9
    environment:
      # this needs to match the hostname defined in the lemmy service
      - LEMMY_UI_LEMMY_INTERNAL_HOST=lemmy:8536
      # set the outside hostname here
      - LEMMY_UI_LEMMY_EXTERNAL_HOST=tucson.social
      - LEMMY_UI_HTTPS=true
    env_file:
      - .env
    depends_on:
      lemmy:
        condition: service_started
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-ILfSs", "http://localhost:1234/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 1m
    logging: *default-logging
    init: true

  pictrs:
    image: asonix/pictrs:0.5.16
    # this needs to match the pictrs url in lemmy.hjson
    hostname: pictrs
    # we can set options to pictrs like this, here we set max. image size and forced format for conversion
    # entrypoint: /sbin/tini -- /usr/local/bin/pict-rs -p /mnt -m 4 --image-format webp
    environment:
      - PICTRS__STORE__TYPE=object_storage
      - PICTRS__STORE__USE_PATH_STYLE=true
      - PICTRS__STORE__ENDPOINT=https://axkrcpov1qsj.compat.objectstorage.us-phoenix-1.oraclecloud.com
      - PICTRS__STORE__BUCKET_NAME=tucsocial-pictrs
      - PICTRS__STORE__REGION=us-phoenix-1
    env_file:
      - .env
    user: 991:991
    volumes:
      - ./pictrs:/mnt
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/image/original/64d5d77c-df85-45ed-be7c-c411862a5261.png",
        ]
      interval: 5m
      timeout: 10s
      retries: 3
      start_period: 2m
    logging: *default-logging

  postgres:
    image: postgres:16-alpine
    # this needs to match the database host in lemmy.hson
    hostname: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=lemmy
      - POSTGRES_DB=lemmy
    env_file:
      - .env
    volumes:
      - /mnt/db/16:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *default-logging
